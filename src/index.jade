doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Build apps, not infrastructure

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 Build apps, not infrastructure
        br
        div.me.round
        h3
          a(href="http://twitter.com/jschementi") Jimmy Schementi
        p @jschementi

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h3.bullet Have you ever...
        div
          h2 Changed code
          h3 directly in
          h2 production?
        br
        pre
          code.language-javascript.
            $ ssh myapp-prod-box
            $ vi /app/server.js
        //div.bullet(style="position: absolute; bottom: 0; text-align: center; left: 0; right: 0;")
          img(src="images/coding-horror.png")

      section
        img(src="images/wolf.jpg")

      section
        img(src="images/cowboy-coding.jpg")
        br
        a(style="font-size: 12px" href="http://www.bnj.com/blog/cowboy-coding-pink-sombrero")
          | http://www.bnj.com/blog/cowboy-coding-pink-sombrero

      section.light-bg(data-bespoke-backdrop='light-bg')
        img(src="images/automate-all-the-things.png")

      section
        h2.bullet
          span Application
          span.bullet.italic &nbsp;(feature)
        h3 vs.
        h2
          span Infrastructure
          span.bullet.italic &nbsp;(chore)

      section
        img(src="images/bullshit.jpg")

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Prioritizing
        h2 infrastructure
        h3 makes it easier to
        h2 ship features

      section
        img(src="images/bad-time.jpg" style="width: 75%;")

      section
        h3 Think of
        h2 infrastructure
        h3 as a
        h2 product
        h3 you provide to
        h2 yourself

      section
        h2 Features
        br
        ul.bullet
          li Deploy a brand new app to new servers
          li Deploy existing app
          li Scale an app
          li Spin up a brand new environment
          li All automated
          li Doesn't make you broke

      section.light-bg(data-bespoke-backdrop='light-bg')
        img(src="images/heroku-logo.jpg" style="width:30%")
        pre
          code.language-javascript.
            $ git push heroku master
        pre.tiny-code
          code.language-javascript.
            ...
            -----&gt; Node.js app detected
            ...
            -----&gt; Launching... done

      section.light-bg(data-bespoke-backdrop='light-bg')
        img(src="images/docker.png" style="width:30%")
        br
        h2 Application
        h2 Containers
        br
        h3 Isolated the applicationâ€™s view of the OS

      section
        h2 Dockerfile
        pre
          code.language-javascript.
            FROM    centos:centos6

            RUN     yum install -y npm

            COPY . /src
            RUN cd /src; npm install

            EXPOSE  8080
            CMD ["node", "/src/index.js"]

      section.light-bg(data-bespoke-backdrop='light-bg')
        img(src="images/aws.png" style="width: 70%")

      section.light-bg(data-bespoke-backdrop='light-bg')
        img(src="images/AWS_Management_Console.png" style="width: 72%")

      section.light-bg(data-bespoke-backdrop='light-bg')
        img(src="images/docean.svg")

      section
        h3 Feels like something's missing...

      section(data-bespoke-backdrop='riker-grin')
        div.pin.top
          h2 Riker
          h3 Heroku-like application deployments for Amazon Web Services.

      section(data-bespoke-backdrop='picard-wtf')
        h3(style="padding-left: 40%") You're the captain, make Riker your #1

      section
        pre.bullet
          code.language-javascript.
            $ pip install riker

          code.language-javascript.bullet.
            $ riker config

          code.language-javascript.bullet.
            $ git clone git@github.com:heroku/node-js-sample.git

          code.language-javascript.bullet.
            $ cd node-js-sample

          code.language-javascript.bullet.
            $ riker deploy

          code.language-javascript.bullet.
            $ riker open

      section
        h3.bullet What does that do?
        ul
          li
            span Configures your AWS account to use Riker
            span.bullet.italic &nbsp;(first time only)
          li
            span Creates a base AMI (Ubuntu 14 + Docker)
            span.bullet.italic &nbsp;(first time only)
          li
            span Deploys your app
            span.bullet.italic &nbsp;(first time launches new instance)
          li Saves new AMI
          li Configures Route53 and gives you URL

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2.bullet Deploy apps
        h3 written in any
        h2 programming
        h2 language
        br
        h3.bullet (uses Heroku Buildpacks)

      section
        h2 Production-ready
        br
        pre
          code.
            riker deploy --scale
        br
        div.bullet(style="text-align: left")
          div.bullet
            p Provisions load-balancer and auto-scaling for each app
            p.italic Use AWS to manually scale or automate it with CloudWatch
          br
          div.bullet
            p Manages rolling deployments
            p.italic New instances only available after passing health check, old instances then fall out.

      section
        h3.bullet Deploy a static website to
        h2 S3

        pre
          code.language-javascript.bullet.
            $ mkdir static-website &amp;&amp; cd static-website

          code.language-javascript.bullet.
            $ echo "Hello, World" &gt; index.html

          code.language-javascript.bullet.
            $ touch .s3 # tells Riker to deploy to Amazon S3

          code.language-javascript.bullet.
            $ git init &amp;&amp; git add -A &amp;&amp; git commit -m "Initial commit"

          code.language-javascript.bullet.
            $ riker deploy

          code.language-javascript.bullet.
            $ riker open

      section
        h2 Future
        br
        ul.bullet
          li Support more clouds (eg. DigitalOcean) through adapters
          li Dockerfile support
          li Use more of AWS (beanstalk, codedeploy, etc)

      section
        p(style="font-size: 2em")
          a(href="https://github.com/jschementi/riker") github.com/jschementi/riker 

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Codequak
        h3 Build awesome stuff

      section
        h1 Thanks!
        br
        div.me.round
        h3 @jschementi

    script(src='build/build.js')
